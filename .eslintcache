[{"C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\index.js":"1","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\App.js":"2","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\store\\reducers\\reducer.js":"3","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\views\\Spinner\\Spinner.js":"4","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\assets\\jss\\Theme-variable.js":"5","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\assets\\jss\\Globalstyles.js":"6","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\routes\\Router.js":"7","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\views\\Country.js":"8","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\views\\News.js":"9","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\layouts\\FullLayout\\FullLayout.js":"10","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\layouts\\BlankLayout\\BlankLayout.js":"11","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\assets\\jss\\Typography.js":"12","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\views\\Home.js":"13","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\views\\Login.js":"14","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\views\\Profile.js":"15","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\views\\Table.js":"16","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\views\\Chart.js":"17","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\views\\error\\error.js":"18","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\store\\actions\\actions.js":"19","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\Components\\DashboardComponents\\Visitors.js":"20","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\Components\\DashboardComponents\\SalesOverview.js":"21","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\Components\\DashboardComponents\\InfoCard.js":"22","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\Components\\DashboardComponents\\Contact.js":"23","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\Components\\DashboardComponents\\BlogCards.js":"24","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\layouts\\FullLayout\\Header\\Header.js":"25","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\layouts\\FullLayout\\Sidebar\\Sidebar.js":"26","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\layouts\\FullLayout\\Sidebar\\Profile.js":"27","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\layouts\\FullLayout\\Sidebar\\data.js":"28","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\layouts\\FullLayout\\Sidebar\\NavItems.js":"29","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\layouts\\FullLayout\\Header\\Logo\\LogoText.js":"30","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\layouts\\FullLayout\\Header\\Logo\\LogoIcon.js":"31"},{"size":726,"mtime":1615848729308,"results":"32","hashOfConfig":"33"},{"size":496,"mtime":1615843163650,"results":"34","hashOfConfig":"33"},{"size":2542,"mtime":1615847622798,"results":"35","hashOfConfig":"33"},{"size":391,"mtime":1615732538517,"results":"36","hashOfConfig":"33"},{"size":960,"mtime":1615732529920,"results":"37","hashOfConfig":"33"},{"size":680,"mtime":1615732529612,"results":"38","hashOfConfig":"33"},{"size":1858,"mtime":1615988639759,"results":"39","hashOfConfig":"33"},{"size":15750,"mtime":1616184117521,"results":"40","hashOfConfig":"33"},{"size":4322,"mtime":1616160271226,"results":"41","hashOfConfig":"33"},{"size":1914,"mtime":1615732532409,"results":"42","hashOfConfig":"33"},{"size":143,"mtime":1615732532111,"results":"43","hashOfConfig":"33"},{"size":722,"mtime":1615732530227,"results":"44","hashOfConfig":"33"},{"size":12587,"mtime":1616160496766,"results":"45","hashOfConfig":"33"},{"size":2721,"mtime":1615732537031,"results":"46","hashOfConfig":"33"},{"size":6653,"mtime":1615732537315,"results":"47","hashOfConfig":"33"},{"size":1063,"mtime":1615904288473,"results":"48","hashOfConfig":"33"},{"size":2478,"mtime":1615732536482,"results":"49","hashOfConfig":"33"},{"size":1706,"mtime":1615732537946,"results":"50","hashOfConfig":"33"},{"size":548,"mtime":1615818725620,"results":"51","hashOfConfig":"33"},{"size":1955,"mtime":1615732531786,"results":"52","hashOfConfig":"33"},{"size":2192,"mtime":1615732531485,"results":"53","hashOfConfig":"33"},{"size":878,"mtime":1615737731731,"results":"54","hashOfConfig":"33"},{"size":2561,"mtime":1615732530931,"results":"55","hashOfConfig":"33"},{"size":1782,"mtime":1615908345305,"results":"56","hashOfConfig":"33"},{"size":2862,"mtime":1616185684482,"results":"57","hashOfConfig":"33"},{"size":2200,"mtime":1615733809677,"results":"58","hashOfConfig":"33"},{"size":2578,"mtime":1615732534328,"results":"59","hashOfConfig":"33"},{"size":1010,"mtime":1616166026056,"results":"60","hashOfConfig":"33"},{"size":1697,"mtime":1615734970365,"results":"61","hashOfConfig":"33"},{"size":313,"mtime":1616185899211,"results":"62","hashOfConfig":"33"},{"size":388,"mtime":1616185516233,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"210a0x",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\index.js",[],["135","136"],"C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\App.js",[],"C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\store\\reducers\\reducer.js",["137","138","139","140","141","142"],"import axios from \"axios\";\nimport MapData from '../../assets/localdata/countries_name_code.json';\nimport CountriesNameCode from '../../assets/localdata/countries_name_code.json';\nconst initialState = {\n\tIsloading:true,\n\tArticleIsloading:true,\n\tArticles:{},\n\tworld_total:{}\n};\n\n\nconst reducer = (state = initialState, action) => {\n  const newState = { ...state };\n  let self = this;\n    const options = {\n      method: 'GET',\n      url: 'https://corona-virus-world-and-india-data.p.rapidapi.com/api',\n      headers: {\n        'x-rapidapi-key': '826ef840c9msha6d7b937a818a54p1592bajsneb1a1e3980d4',\n        'x-rapidapi-host': 'corona-virus-world-and-india-data.p.rapidapi.com'\n      }\n    };\n    const Newsoptions = {\n      method: 'GET',\n      url: 'https://covid-19-news.p.rapidapi.com/v1/covid',\n      params: {q: 'covid', lang: 'en', media: 'True'},\n      headers: {\n        'x-rapidapi-key': '826ef840c9msha6d7b937a818a54p1592bajsneb1a1e3980d4',\n        'x-rapidapi-host': 'covid-19-news.p.rapidapi.com'\n      }\n    };\n  switch (action.type) {\n    case \"GET_WORLD_DATA\": \n      axios.request(options).then(function (response) {\n        let data_structure = [];\n            Object.keys(response.data.countries_stat).map((countries_stat,index)=>{\n                Object.keys(CountriesNameCode.countries).map((countries,cindex)=>{\n                  if(response.data.countries_stat[countries_stat].country_name == CountriesNameCode.countries[countries].name){\n                    let data_str = {\"id\":CountriesNameCode.countries[countries].alpha3,\"value\":parseFloat(response.data.countries_stat[countries_stat].cases.replace(/,/g, ''))};\n                    data_structure.push(data_str)\n                  }\n                })\n            })\n            newState.data = data_structure;\n            newState.countries_stat = response.data.countries_stat;\n            newState.world_total = response.data.world_total;\n            newState.Isloading = false;\n            newState.statistic_taken_at = response.data.statistic_taken_at;\n      }).catch(function (error) {\n        newState.Isloading = true;\n        console.error(error);\n      });\n    break;\n\n    case \"GET_NEWS_DATA\":\n        axios.request(Newsoptions).then(function (response) {\n          newState.ArticleIsloading = false;\n          newState.Articles = response.data.articles;\n        }).catch(function (error) {\n          console.error(error);\n        });\n    break;\n\n    case \"LOADING\":\n      newState.loading = true;\n\tbreak;\n\n  }\n  return newState;\n};\n\nexport default reducer;\n","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\views\\Spinner\\Spinner.js",[],"C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\assets\\jss\\Theme-variable.js",[],"C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\assets\\jss\\Globalstyles.js",[],"C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\routes\\Router.js",[],"C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\views\\Country.js",["143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169"],"import React,{ Component } from 'react';\r\nimport {\r\n    Grid,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Box,\r\n    Container,\r\n    CardMedia\r\n  } from '@material-ui/core';\r\nimport SalesOverview from  '../Components/DashboardComponents/SalesOverview'  \r\nimport Visitors from  '../Components/DashboardComponents/Visitors'  \r\nimport InfoCards from '../Components/DashboardComponents/InfoCard';\r\nimport Contacts from '../Components/DashboardComponents/Contact';\r\nimport { HowToReg,MoodBad,TrendingUp } from '@material-ui/icons';\r\nimport * as actionCreator from \"../store/actions/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"./Spinner/Spinner\";\r\n\r\nimport MapData from '../assets/localdata/world_countries.json';\r\nimport CountriesNameCode from '../assets/localdata/countries_name_code.json';\r\n\r\nimport axios from \"axios\";\r\nimport moment from 'moment'\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {  Search} from '@material-ui/icons';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Who1 from '../assets/images/covidprecuations/Who1.jpg'\r\nimport Who2 from '../assets/images/covidprecuations/Who2.jpg'\r\nimport Who3 from '../assets/images/covidprecuations/Who3.jpg'\r\nimport Who4 from '../assets/images/covidprecuations/Who4.jpg'\r\nimport Who5 from '../assets/images/covidprecuations/Who5.png'\r\nimport Who6 from '../assets/images/covidprecuations/Who6.jpg'\r\n\r\n\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          Searchloading:false,\r\n          cntryid:'',\r\n          SelectedCountry:{}\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n      }\r\n        componentDidMount(){\r\n            let self = this;\r\n            const options = {\r\n            method: 'GET',\r\n            url: 'https://corona-virus-world-and-india-data.p.rapidapi.com/api',\r\n            headers: {\r\n                'x-rapidapi-key': '826ef840c9msha6d7b937a818a54p1592bajsneb1a1e3980d4',\r\n                'x-rapidapi-host': 'corona-virus-world-and-india-data.p.rapidapi.com'\r\n            }\r\n            };\r\n            const filter = createFilterOptions();\r\n\r\n            axios.request(options).then(function (response) {\r\n                let data_structure = [];\r\n                Object.keys(response.data.countries_stat).map((countries_stat,index)=>{\r\n                    Object.keys(CountriesNameCode.countries).map((countries,cindex)=>{\r\n                        if(response.data.countries_stat[countries_stat].country_name == CountriesNameCode.countries[countries].name){\r\n                        let data_str = {\"id\":CountriesNameCode.countries[countries].alpha3,\"value\":parseFloat(response.data.countries_stat[countries_stat].cases.replace(/,/g, ''))};\r\n                        data_structure.push(data_str)\r\n                        }\r\n                    })\r\n                })\r\n                self.setState({data:data_structure,countries_stat:response.data.countries_stat,world_total:response.data.world_total,Isloading:true,statistic_taken_at:response.data.statistic_taken_at})\r\n            }).catch(function (error) {\r\n            self.setState({Isloading:false})\r\n            console.error(error);\r\n            });\r\n        }\r\n\r\n    handleChange = (event, values) => {\r\n        if(values!== null ){\r\n            this.setState({cntryid:values.name});\r\n        }else{\r\n            this.setState({cntryid:null});\r\n        }\r\n    }\r\n    handleSearch(){\r\n        if(this.state.cntryid !== null && this.state.cntryid !== ''){\r\n                const Countries = this.state.countries_stat;\r\n                this.setState({Searchloading:true});\r\n                const Country = Object.keys(Countries).map((Country)=>{\r\n                    if(Countries[Country].country_name == this.state.cntryid){\r\n                        return Countries[Country];\r\n                    }\r\n                });\r\n                const SelectedCountry = Object.keys(Country).reduce((acc, key) => {\r\n                    const _acc = acc;\r\n                    if (Country[key] !== undefined) _acc[key] = Country[key];\r\n                    return _acc;\r\n                }, {})\r\n                setTimeout(() => {\r\n                    this.setState({SelectedCountry:SelectedCountry})\r\n                    this.setState({Searchloading:false})\r\n                    Object.keys(SelectedCountry).length == 0 ? this.setState({DataAvail:false}) : this.setState({DataAvail:true})\r\n                }, 600)\r\n\r\n            }\r\n        }\r\n    render() {\r\n      const countries = CountriesNameCode.countries;\r\n      const SelectedCountry = this.state.SelectedCountry;\r\n        return (\r\n            <Grid container spacing={3}>\r\n                {this.state.Isloading ?\r\n                        <>\r\n                            {/* Card Section */}\r\n                            <Grid item lg={10} md={12} xs={12}>\r\n                                    <Autocomplete\r\n                                        id=\"country-select-demo\"\r\n                                        className=\"country-select-demo\"\r\n                                        // style={{ width: 300 }}\r\n                                        options={countries}\r\n                                        autoHighlight\r\n                                        getOptionLabel={(option) => option.name}\r\n                                        renderOption={(option) => (\r\n                                            <>\r\n                                            {option.name} ({option.alpha3})\r\n                                            </>\r\n                                        )}\r\n                                        clearOnBlur={false}\r\n                                        renderInput={(params) => (\r\n                                            <TextField\r\n                                            {...params}\r\n                                            label=\"Choose a country\"\r\n                                            variant=\"outlined\"\r\n                                            inputProps={{\r\n                                                ...params.inputProps,\r\n                                                autoComplete: 'new-password', // disable autocomplete and autofill\r\n                                            }}\r\n                                            />\r\n                                        )}\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                            </Grid>\r\n                            <Grid item lg={2} md={12} xs={12}>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    size=\"large\"\r\n                                    className=\"search-button\"\r\n                                    onClick={this.handleSearch}\r\n                                    startIcon={this.state.Searchloading ? <CircularProgress /> : <Search/>}\r\n                                    >\r\n                                    Search\r\n                                </Button>\r\n                            </Grid>\r\n                        </>\r\n                        :<><Spinner /></>\r\n                    }\r\n                    {\r\n                        this.state.DataAvail == false   ? \r\n                            <Zoom in={true}>\r\n                                <Grid item lg={12} md={12} xs={12}>\r\n                                    <Typography variant=\"h1\" align=\"center\">OOps...</Typography>\r\n                                    <Typography\r\n                                        align=\"center\"\r\n                                        color=\"textPrimary\"\r\n                                        variant=\"subtitle2\"\r\n                                    ><Box p={2}>\r\n                                        {this.state.cntryid} Data is not available right now . . !\r\n                                        </Box>\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Zoom>\r\n                        :false\r\n                        \r\n                        // <Zoom in={true}>\r\n                        //     <Grid item lg={12} md={12} xs={12}>\r\n                        //         <Typography variant=\"h1\" align=\"center\">OOps...111</Typography>\r\n                        //         <Typography\r\n                        //             align=\"center\"\r\n                        //             color=\"textPrimary\"\r\n                        //             variant=\"subtitle2\"\r\n                        //         ><Box p={2}>\r\n                        //             {this.state.cntryid} Data is not available\r\n                        //             </Box>\r\n                        //         </Typography>\r\n                        //     </Grid>\r\n                        // </Zoom>\r\n                    }\r\n                    {\r\n                    Object.keys(SelectedCountry).length != 0 ? \r\n                        // <>\r\n                        //    <Zoom in={true}>\r\n                        //         <Grid item lg={12} md={12} xs={12}>\r\n                        //             <Typography variant=\"h1\" align=\"center\">OOps... </Typography>\r\n                        //             <Typography\r\n                        //                 align=\"center\"\r\n                        //                 color=\"textPrimary\"\r\n                        //                 variant=\"subtitle2\"\r\n                        //             ><Box p={2}>\r\n                        //                 {this.state.cntryid} Data is not available\r\n                        //                 </Box>\r\n                        //             </Typography>\r\n                        //         </Grid>\r\n                        //     </Zoom>\r\n                        // </>\r\n                        Object.keys(SelectedCountry).map((Country)=>(\r\n                            <>\r\n                                <Zoom in={true}>\r\n                                    <Grid item lg={12} md={12} xs={12}>\r\n                                        <Typography variant=\"h1\" align=\"center\">{SelectedCountry[Country].country_name}</Typography>\r\n                                    </Grid>\r\n                                </Zoom>\r\n                                <Zoom in={true}>\r\n                                    <Grid item lg={4} md={12} xs={12}>\r\n                                        <InfoCards heading=\"Active Cases\" icon={<TrendingUp/>} style={{background: '#fdaeae'}} cost={SelectedCountry[Country].active_cases}/>\r\n                                    </Grid>\r\n                                </Zoom>\r\n                                <Zoom in={true}>\r\n                                    <Grid item lg={4} md={12} xs={12}>\r\n                                        <InfoCards heading=\"New Cases\" icon={<TrendingUp/>} style={{background: '#89c9f3'}} cost={SelectedCountry[Country].new_cases}/>\r\n                                    </Grid>\r\n                                </Zoom>\r\n                                <Zoom in={true}>\r\n                                    <Grid item lg={4} md={12} xs={12}>\r\n                                        <InfoCards heading=\"New Deaths\" icon={<TrendingUp/>} style={{background: '#f1cc65'}} cost={SelectedCountry[Country].deaths}/>\r\n                                    </Grid>\r\n                                </Zoom>\r\n                                <Zoom in={true}>\r\n                                \r\n                                <Grid item lg={4} md={12} xs={12}>\r\n                                    <InfoCards heading=\"Deaths Per 1 Million Population\" icon={<TrendingUp/>} style={{background: '#fdaeae'}} cost={SelectedCountry[Country].deaths_per_1m_population}/>\r\n                                </Grid>\r\n                                </Zoom>\r\n\r\n                                <Zoom in={true}>\r\n                                \r\n                                <Grid item lg={4} md={12} xs={12}>\r\n                                    <InfoCards heading=\"Serious Cases\" icon={<TrendingUp/>} style={{background: '#89c9f3'}} cost={SelectedCountry[Country].serious_critical}/>\r\n                                </Grid>\r\n                                </Zoom>\r\n\r\n                                <Zoom in={true}>\r\n                                \r\n                                <Grid item lg={4} md={12} xs={12}>\r\n                                    <InfoCards heading=\"Cases Per 1 Million Population\" icon={<TrendingUp/>} style={{background: '#f1cc65'}} cost={SelectedCountry[Country].total_cases_per_1m_population}/>\r\n                                </Grid>\r\n                                </Zoom>\r\n\r\n\r\n                                <Zoom in={true}>\r\n                                \r\n                                <Grid item lg={4} md={12} xs={12}>\r\n                                    <InfoCards heading=\"Total Cases\" icon={<HowToReg/>} style={{background: '#97e8b0'}} cost={SelectedCountry[Country].cases}/>\r\n                                </Grid>\r\n                                </Zoom>\r\n\r\n\r\n                                <Zoom in={true}>\r\n                                    <Grid item lg={4} md={12} xs={12}>\r\n                                        <InfoCards heading=\"Total Recovered\" icon={<HowToReg/>} style={{background: '#97e8b0'}} cost={SelectedCountry[Country].total_recovered}/>\r\n                                    </Grid>\r\n                                </Zoom>\r\n\r\n                                <Zoom in={true}>\r\n                                <Grid item lg={4} md={12} xs={12}>\r\n                                    <InfoCards heading=\"Total Deaths\" icon={<MoodBad/>} style={{background: '#ce5757'}} cost={SelectedCountry[Country].deaths}/>\r\n                                </Grid>\r\n                                </Zoom>\r\n\r\n                            </>\r\n                        )):false\r\n                    }\r\n                        <Grid item lg={6} md={6} xs={12}>\r\n                            <img src={Who3} className=\"who-image\" />\r\n                        </Grid>\r\n\r\n                        <Grid item lg={6} md={6} xs={12}>\r\n                            <img src={Who1} className=\"who-image\" />\r\n                        </Grid>\r\n                        \r\n\r\n                        <Grid item lg={6} md={6} xs={12}>\r\n                            <img src={Who2} className=\"who-image\" />\r\n                        </Grid>\r\n                        \r\n                        <Grid item lg={6} md={6} xs={12}>\r\n                            <img src={Who4} className=\"who-image\" />\r\n                        </Grid>\r\n            </Grid>\r\n            \r\n        );\r\n    }\r\n}\r\n \r\nconst mapStateToProps = state => {\r\n    return {\r\n        data:state.data,\r\n\t\tcountries_stat:state.countries_stat,\r\n\t\tworld_total:state.world_total,\r\n\t\tIsloading:state.Isloading,\r\n\t\tstatistic_taken_at:state.statistic_taken_at,\r\n    };\r\n  };\r\n  \r\n  const mapDispachToProps = dispatch => {\r\n    return {\r\n        getWorldData: () => dispatch(actionCreator.getWorldData()),\r\n        getNewsData: () => dispatch(actionCreator.getNewsData()),\r\n    };\r\n  };\r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispachToProps\r\n  )(Home);\r\n","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\views\\News.js",["170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192"],"import React,{ Component } from 'react';\r\nimport {\r\n    Grid,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n  } from '@material-ui/core';\r\nimport SalesOverview from  '../Components/DashboardComponents/SalesOverview'  \r\nimport Visitors from  '../Components/DashboardComponents/Visitors'  \r\nimport InfoCards from '../Components/DashboardComponents/InfoCard';\r\nimport Contacts from '../Components/DashboardComponents/Contact';\r\nimport Table from './Table'\r\nimport BlogCard from '../Components/DashboardComponents/BlogCards';\r\nimport us1 from '../assets/images/backgrounds/u1.jpg'\r\nimport us2 from '../assets/images/backgrounds/u2.jpg'\r\nimport us3 from '../assets/images/backgrounds/u3.jpg'\r\nimport us4 from '../assets/images/backgrounds/u4.jpg'\r\nimport { HowToReg,MoodBad,TrendingUp } from '@material-ui/icons';\r\nimport * as actionCreator from \"../store/actions/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { ResponsiveChoropleth } from '@nivo/geo';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Spinner from \"./Spinner/Spinner\";\r\n\r\nimport MapData from '../assets/localdata/world_countries.json';\r\nimport CountriesNameCode from '../assets/localdata/countries_name_code.json';\r\n\r\nimport axios from \"axios\";\r\nimport moment from 'moment'\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nclass News extends Component {\r\n    \r\n    // componentDidMount() {\r\n    //     const { getWorldData,getNewsData} = this.props;\r\n    //     getWorldData();\r\n    //     getNewsData();\r\n    // }\r\n\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                Isloading:false,\r\n                ArticleIsloading:true,\r\n                Articles:{},\r\n                Dummy:['1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1',],\r\n                TableData:[]\r\n            };\r\n        }\r\n        componentDidMount(){\r\n            let self = this;\r\n            const Newsoptions = {\r\n                method: 'GET',\r\n                url: 'https://covid-19-news.p.rapidapi.com/v1/covid',\r\n                params: {q: 'covid', lang: 'en', media: 'True'},\r\n                headers: {\r\n                'x-rapidapi-key': '826ef840c9msha6d7b937a818a54p1592bajsneb1a1e3980d4',\r\n                'x-rapidapi-host': 'covid-19-news.p.rapidapi.com'\r\n                }\r\n            };\r\n\r\n            axios.request(Newsoptions).then(function (response) {\r\n                self.setState({ArticleIsloading:false})\r\n                self.setState({Articles:response.data.articles});\r\n                console.log(\"this.state\",self.state.Articles)\r\n            }).catch(function (error) {\r\n                console.error(error);\r\n            });\r\n        }\r\n\r\n    render() {\r\n      const Articles = this.state.Articles;\r\n        // console.log(\"this.state.data\",this.state.TableData)\r\n        return (\r\n            <Grid container spacing={3}>\r\n                    {this.state.ArticleIsloading == false ? \r\n                            Object.keys(Articles).map(function(Article, index) {\r\n                                return(\r\n                                    <Zoom in={true}>\r\n                                        <Grid item lg={4} md={12} xs={12} key={index}>\r\n                                            <BlogCard summary={Articles[Article].summary} image={Articles[Article].media} title={Articles[Article].title}/>\r\n                                        </Grid>\r\n                                    </Zoom>\r\n                                    \r\n                                );\r\n                            })\r\n                        : <Spinner/>\r\n                    }\r\n            </Grid>\r\n            \r\n        );\r\n    }\r\n}\r\n \r\nconst mapStateToProps = state => {\r\n    return {\r\n        data:state.data,\r\n\t\tcountries_stat:state.countries_stat,\r\n\t\tworld_total:state.world_total,\r\n\t\tIsloading:state.Isloading,\r\n\t\tstatistic_taken_at:state.statistic_taken_at,\r\n    };\r\n  };\r\n  \r\n  const mapDispachToProps = dispatch => {\r\n    return {\r\n        getWorldData: () => dispatch(actionCreator.getWorldData()),\r\n        getNewsData: () => dispatch(actionCreator.getNewsData()),\r\n    };\r\n  };\r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispachToProps\r\n  )(News);\r\n","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\layouts\\FullLayout\\FullLayout.js",[],"C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\layouts\\BlankLayout\\BlankLayout.js",[],"C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\assets\\jss\\Typography.js",[],"C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\views\\Home.js",["193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208"],"import React,{ Component } from 'react';\r\nimport {\r\n    Grid,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n  } from '@material-ui/core';\r\nimport SalesOverview from  '../Components/DashboardComponents/SalesOverview'  \r\nimport Visitors from  '../Components/DashboardComponents/Visitors'  \r\nimport InfoCards from '../Components/DashboardComponents/InfoCard';\r\nimport Contacts from '../Components/DashboardComponents/Contact';\r\nimport Table from './Table'\r\nimport BlogCard from '../Components/DashboardComponents/BlogCards';\r\nimport us1 from '../assets/images/backgrounds/u1.jpg'\r\nimport us2 from '../assets/images/backgrounds/u2.jpg'\r\nimport us3 from '../assets/images/backgrounds/u3.jpg'\r\nimport us4 from '../assets/images/backgrounds/u4.jpg'\r\nimport { HowToReg,MoodBad,TrendingUp } from '@material-ui/icons';\r\nimport * as actionCreator from \"../store/actions/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { ResponsiveChoropleth } from '@nivo/geo';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Spinner from \"../views/Spinner/Spinner\";\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nimport MapData from '../assets/localdata/world_countries.json';\r\nimport CountriesNameCode from '../assets/localdata/countries_name_code.json';\r\n\r\nimport axios from \"axios\";\r\nimport moment from 'moment'\r\n\r\nclass Home extends Component {\r\n    \r\n    // componentDidMount() {\r\n    //     const { getWorldData,getNewsData} = this.props;\r\n    //     getWorldData();\r\n    //     getNewsData();\r\n    // }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          Isloading:false,\r\n          ArticleIsloading:true,\r\n          Articles:{},\r\n          Dummy:['1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1',],\r\n          TableData:[]\r\n        };\r\n      }\r\n      componentDidMount(){\r\n        let self = this;\r\n        const options = {\r\n          method: 'GET',\r\n          url: 'https://corona-virus-world-and-india-data.p.rapidapi.com/api',\r\n          headers: {\r\n            'x-rapidapi-key': '826ef840c9msha6d7b937a818a54p1592bajsneb1a1e3980d4',\r\n            'x-rapidapi-host': 'corona-virus-world-and-india-data.p.rapidapi.com'\r\n          }\r\n        };\r\n    \r\n        const Newsoptions = {\r\n            method: 'GET',\r\n            url: 'https://covid-19-news.p.rapidapi.com/v1/covid',\r\n            params: {q: 'covid', lang: 'en', media: 'True'},\r\n            headers: {\r\n              'x-rapidapi-key': '826ef840c9msha6d7b937a818a54p1592bajsneb1a1e3980d4',\r\n              'x-rapidapi-host': 'covid-19-news.p.rapidapi.com'\r\n            }\r\n          };\r\n            const preventDefault = (event) => event.preventDefault();\r\n          \r\n          axios.request(Newsoptions).then(function (response) {\r\n              self.setState({ArticleIsloading:false})\r\n              self.setState({Articles:response.data.articles});\r\n              console.log(\"this.state\",self.state.Articles)\r\n    \r\n          }).catch(function (error) {\r\n              console.error(error);\r\n          });\r\n    \r\n        axios.request(options).then(function (response) {\r\n                let data_structure = [];\r\n                let table_data_structure = [];\r\n                Object.keys(response.data.countries_stat).map((countries_stat,index)=>{\r\n                    Object.keys(CountriesNameCode.countries).map((countries,cindex)=>{\r\n                        if(response.data.countries_stat[countries_stat].country_name == CountriesNameCode.countries[countries].name){\r\n                        let data_str = {\"id\":CountriesNameCode.countries[countries].alpha3,\"value\":parseFloat(response.data.countries_stat[countries_stat].cases.replace(/,/g, ''))};\r\n                        data_structure.push(data_str)\r\n                        }\r\n                    })\r\n                })\r\n            self.setState({data:data_structure,countries_stat:response.data.countries_stat,world_total:response.data.world_total,Isloading:true,statistic_taken_at:response.data.statistic_taken_at})\r\n            Object.keys(self.state.countries_stat).map((countries_stat,index)=>{\r\n                let data_str = {\"id\":index+1,\"country_name\":self.state.countries_stat[countries_stat].country_name,\"new_cases\":self.state.countries_stat[countries_stat].new_cases,\"active_cases\":self.state.countries_stat[countries_stat].active_cases,\"deaths\":self.state.countries_stat[countries_stat].deaths,\"total_recovered\":self.state.countries_stat[countries_stat].total_recovered};\r\n                table_data_structure.push(data_str)\r\n            })\r\n            self.setState({TableData:table_data_structure})\r\n        }).catch(function (error) {\r\n          self.setState({Isloading:false})\r\n          console.error(error);\r\n        });\r\n      }\r\n\r\n    render() {\r\n      const Articles = this.state.Articles;\r\n        // console.log(\"this.state.data\",this.state.TableData)\r\n        return (\r\n            <Grid container spacing={3}>\r\n                {this.state.Isloading ?\r\n                    <>\r\n                        {/* Card Section */}\r\n                        <Zoom in={true}>\r\n                            <Grid item lg={4} md={12} xs={12}>\r\n                                <InfoCards heading=\"Active Cases\" icon={<TrendingUp/>} style={{background: '#fdaeae'}} cost={this.state.world_total.active_cases}/>\r\n                            </Grid>\r\n                        </Zoom>\r\n\r\n                        <Zoom in={true}>\r\n                            <Grid item lg={4} md={12} xs={12}>\r\n                                <InfoCards heading=\"New Cases\" icon={<TrendingUp/>} style={{background: '#89c9f3'}} cost={this.state.world_total.new_cases}/>\r\n                            </Grid>\r\n                        </Zoom>\r\n\r\n                        <Zoom in={true}>\r\n                            <Grid item lg={4} md={12} xs={12}>\r\n                                <InfoCards heading=\"New Deaths\" icon={<TrendingUp/>} style={{background: '#f1cc65'}} cost={this.state.world_total.new_deaths}/>\r\n                            </Grid>\r\n                        </Zoom>\r\n\r\n                        <Zoom in={true}>\r\n                            <Grid item lg={4} md={12} xs={12}>\r\n                                <InfoCards heading=\"Deaths Per 1 Million Population\" icon={<TrendingUp/>} style={{background: '#fdaeae'}} cost={this.state.world_total.deaths_per_1m_population}/>\r\n                            </Grid>\r\n                        </Zoom>\r\n\r\n                        <Zoom in={true}>\r\n                            <Grid item lg={4} md={12} xs={12}>\r\n                                <InfoCards heading=\"Serious Cases\" icon={<TrendingUp/>} style={{background: '#89c9f3'}} cost={this.state.world_total.serious_critical}/>\r\n                            </Grid>\r\n                        </Zoom>\r\n\r\n                        <Zoom in={true}>\r\n                            <Grid item lg={4} md={12} xs={12}>\r\n                                <InfoCards heading=\"Cases Per 1 Million Population\" icon={<TrendingUp/>} style={{background: '#f1cc65'}} cost={this.state.world_total.total_cases_per_1m_population}/>\r\n                            </Grid>\r\n                        </Zoom>\r\n\r\n                        <Zoom in={true}>\r\n                            <Grid item lg={4} md={12} xs={12}>\r\n                                <InfoCards heading=\"Total Cases\" icon={<HowToReg/>} style={{background: '#97e8b0'}} cost={this.state.world_total.total_cases}/>\r\n                            </Grid>\r\n                        </Zoom>\r\n\r\n                        <Zoom in={true}>\r\n                            <Grid item lg={4} md={12} xs={12}>\r\n                                <InfoCards heading=\"Total Recovered\" icon={<HowToReg/>} style={{background: '#97e8b0'}} cost={this.state.world_total.total_recovered}/>\r\n                            </Grid>\r\n                        </Zoom>\r\n\r\n                        <Zoom in={true}>\r\n                            <Grid item lg={4} md={12} xs={12}>\r\n                                <InfoCards heading=\"Total Deaths\" icon={<MoodBad/>} style={{background: '#ce5757'}} cost={this.state.world_total.total_deaths}/>\r\n                            </Grid>\r\n                        </Zoom>\r\n\r\n                        {/* Map Section */}\r\n                        <Grid item lg={12} md={12} xs={12} >\r\n                            <Card elevation={1} >\r\n                                <CardHeader titleTypographyProps={{variant:'h4' }} title=\"World Wide Update\"/>\r\n                                <CardContent className=\"main-map-div\">\r\n                                    <ResponsiveChoropleth\r\n                                                    data={this.state.data}\r\n                                                    features={MapData.features}\r\n                                                    margin={{ top: 0, right: 0, bottom: 0, left: 0 }}\r\n                                                    colors=\"nivo\"\r\n                                                    domain={[ 0, 1000000 ]}\r\n                                                    unknownColor=\"#666666\"\r\n                                                    label=\"properties.name\"\r\n                                                    valueFormat=\".2s\"\r\n                                                    projectionTranslation={[ 0.5, 0.5 ]}\r\n                                                    projectionRotation={[ 0, 0, 0 ]}\r\n                                                    enableGraticule={true}\r\n                                                    graticuleLineColor=\"#dddddd\"\r\n                                                    borderWidth={0.5}\r\n                                                    borderColor=\"#152538\"\r\n                                                    legends={[\r\n                                                        {\r\n                                                            anchor: 'bottom-left',\r\n                                                            direction: 'column',\r\n                                                            justify: true,\r\n                                                            translateX: 20,\r\n                                                            translateY: -100,\r\n                                                            itemsSpacing: 0,\r\n                                                            itemWidth: 94,\r\n                                                            itemHeight: 18,\r\n                                                            itemDirection: 'left-to-right',\r\n                                                            itemTextColor: '#444444',\r\n                                                            itemOpacity: 0.85,\r\n                                                            symbolSize: 18,\r\n                                                            effects: [\r\n                                                                {\r\n                                                                    on: 'hover',\r\n                                                                    style: {\r\n                                                                        itemTextColor: '#000000',\r\n                                                                        itemOpacity: 1\r\n                                                                    }\r\n                                                                }\r\n                                                            ]\r\n                                                        }\r\n                                                    ]}\r\n                                                />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        </>\r\n                        :<><Spinner /></>\r\n                    }\r\n                <Grid item lg={12} md={12} xs={12}>\r\n                    <Table List={this.state.TableData}/>\r\n                </Grid>\r\n            </Grid>\r\n            \r\n        );\r\n    }\r\n}\r\n \r\nconst mapStateToProps = state => {\r\n    return {\r\n        data:state.data,\r\n\t\tcountries_stat:state.countries_stat,\r\n\t\tworld_total:state.world_total,\r\n\t\tIsloading:state.Isloading,\r\n\t\tstatistic_taken_at:state.statistic_taken_at,\r\n    };\r\n  };\r\n  \r\n  const mapDispachToProps = dispatch => {\r\n    return {\r\n        getWorldData: () => dispatch(actionCreator.getWorldData()),\r\n        getNewsData: () => dispatch(actionCreator.getNewsData()),\r\n    };\r\n  };\r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispachToProps\r\n  )(Home);\r\n","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\views\\Login.js",[],"C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\views\\Profile.js",[],"C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\views\\Table.js",["209"],"import * as React from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    CardHeader\r\n  } from '@material-ui/core';\r\n  import Spinner from \"../views/Spinner/Spinner\";\r\n\r\nconst columns = [\r\n  { field: 'id', headerName: 'SL.No', width: 100 },\r\n  { field: 'country_name', headerName: 'Country Name', width: 200 },\r\n  { field: 'active_cases', headerName: 'Active Cases', width: 150 },\r\n  { field: 'deaths', headerName: 'Deaths', width: 150 },\r\n  { field: 'new_cases', headerName: 'New Cases', width: 150 },\r\n  { field: 'total_recovered', headerName: 'Recovered', width: 150 },\r\n];\r\n\r\nconst DataTable = (props) => {\r\n  return (\r\n    <Card>\r\n    <CardHeader titleTypographyProps={{variant:'h4' }} title=\"World Wide Data Table\"/>\r\n    <CardContent>\r\n        <div style={{ height: 400, width: '100%' }}>\r\n          {props.List != undefined ? <DataGrid rows={props.List} columns={columns} pageSize={20}/> : <Spinner/> }\r\n        </div>\r\n        </CardContent>\r\n    </Card>\r\n    \r\n  );\r\n}\r\n\r\nexport default DataTable;\r\n","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\views\\Chart.js",[],"C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\views\\error\\error.js",[],"C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\store\\actions\\actions.js",[],"C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\Components\\DashboardComponents\\Visitors.js",[],"C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\Components\\DashboardComponents\\SalesOverview.js",[],"C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\Components\\DashboardComponents\\InfoCard.js",[],"C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\Components\\DashboardComponents\\Contact.js",[],"C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\Components\\DashboardComponents\\BlogCards.js",["210","211","212","213"],"  import {\r\n    Divider,\r\n    Card,\r\n    CardContent,\r\n    CardMedia, \r\n    Typography,\r\n    makeStyles,\r\n    Avatar,\r\n    Box\r\n  } from '@material-ui/core';\r\nimport moment from 'moment'\r\n\r\n const useStyles = makeStyles({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 250,\r\n    },\r\n    avatar: {\r\n        display: \"inline-block\",\r\n        border: \"2px solid white\",\r\n        \r\n      }\r\n  });\r\n  const faces = [\r\n    \"http://i.pravatar.cc/300?img=1\",\r\n    \"http://i.pravatar.cc/300?img=2\",\r\n    \"http://i.pravatar.cc/300?img=3\",\r\n    \"http://i.pravatar.cc/300?img=4\"\r\n  ];  \r\nconst InfoCards = (props) => {\r\n  console.log(props)\r\n    const classes = useStyles();\r\n    return ( \r\n        <Card >\r\n            <CardMedia\r\n            className={classes.media}\r\n            image={props.image}\r\n            />\r\n            <CardContent>\r\n            <div className=\"word-wrap\">\r\n\r\n            <Typography\r\n                \r\n                variant={\"h4\"}\r\n                gutterBottom\r\n            >\r\n                {props.title.substring(0, 100) + '...'}\r\n            </Typography>\r\n            </div>\r\n\r\n            <div className=\"word-wrap\">\r\n              \r\n            <Typography\r\n                variant={\"caption\"}\r\n            >\r\n                {props.summary.substring(0, 150) + '...'}\r\n\r\n                {/* {props.summary} */}\r\n            </Typography>\r\n            \r\n            </div>\r\n            </CardContent>\r\n            <Divider  light />\r\n            {/* <Box p={2}>\r\n              {faces.map(face => (\r\n                  <Avatar className={classes.avatar} key={face} src={face} />\r\n              ))}\r\n              {moment(props.published_date).from()}\r\n            </Box> */}\r\n        </Card>\r\n    );\r\n}\r\n \r\nexport default InfoCards;","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\layouts\\FullLayout\\Header\\Header.js",["214","215","216","217"],"C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\layouts\\FullLayout\\Sidebar\\Sidebar.js",["218","219"],"import React from 'react';\r\nimport Navitems from './NavItems';\r\nimport { Box, Divider,  Drawer, Hidden, List,  makeStyles } from '@material-ui/core';\r\nimport {SidebarWidth} from '../../../assets/jss/Theme-variable'\r\nimport Menuitems from './data';\r\nimport Profile from './Profile';\r\n// import UpgradeToPro from './UpgradeToPro'\r\nconst useStyles = makeStyles((theme) => ({\r\n    mobileSidebar: {\r\n      width: SidebarWidth\r\n    },\r\n    desktopSidebar: {\r\n      width: SidebarWidth,\r\n      top: 64,\r\n      borderRight:'0px',\r\n      height: 'calc(100% - 64px)',\r\n      boxShadow:'1px 0px 20px rgba(0, 0, 0, 0.08)'\r\n    },\r\n    \r\n  }));\r\n\r\nconst Sidebar = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const SidebarContent = (\r\n        <Box height=\"100%\" display=\"flex\" flexDirection=\"column\" >\r\n\r\n            {/* <Profile/> */}\r\n\r\n            {/* <Divider /> */}\r\n\r\n            <Box p={2}>\r\n                <List>\r\n                    {Menuitems.map((item, index) => (\r\n                        <Navitems\r\n                            href={item.href}\r\n                            key={index}\r\n                            title={item.title}\r\n                            icon={item.icon}\r\n                        />\r\n                    ))}\r\n                </List>\r\n            </Box>\r\n\r\n            <Box flexGrow={1} />\r\n\r\n            {/* <UpgradeToPro/> */}\r\n        </Box>\r\n    )\r\n    \r\n    return (\r\n        <>\r\n           <Hidden lgUp>\r\n                <Drawer \r\n                    anchor=\"left\" \r\n                    open={props.isMobileSidebarOpen}\r\n                    onClose={props.onSidebarClose}\r\n                    classes={{ paper: classes.mobileSidebar }} \r\n                    variant=\"temporary\">\r\n                    {SidebarContent}\r\n                </Drawer>\r\n            </Hidden>\r\n\r\n            <Hidden mdDown>\r\n                <Drawer\r\n                anchor=\"left\"\r\n                classes={{ paper: classes.desktopSidebar }}\r\n                open={props.isSidebarOpen}\r\n                variant=\"persistent\"\r\n                >\r\n                {SidebarContent}\r\n                </Drawer>\r\n            </Hidden> \r\n\r\n        </>\r\n     );\r\n}\r\n \r\nexport default Sidebar;  \r\n  ","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\layouts\\FullLayout\\Sidebar\\Profile.js",[],"C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\layouts\\FullLayout\\Sidebar\\data.js",["220","221","222","223"],"import { PublicOutlined,AnnouncementOutlined, Search,LockOpenTwoTone, ErrorTwoTone, AccountCircleTwoTone, BallotTwoTone} from '@material-ui/icons';\r\nconst Menuitems = [\r\n    {\r\n      href: 'home',\r\n      icon: PublicOutlined,\r\n      title: 'World Cases'\r\n    },\r\n    {\r\n      href: 'country',\r\n      icon: Search,\r\n      title: 'Search Country'\r\n    },\r\n    {\r\n      href: 'news',\r\n      icon: AnnouncementOutlined,\r\n      title: 'News'\r\n    },\r\n    // {\r\n    //   href: 'table',\r\n    //   icon: BallotTwoTone,\r\n    //   title: 'Table'\r\n    // },\r\n    // {\r\n    //   href: 'profile',\r\n    //   icon: AccountCircleTwoTone,\r\n    //   title: 'Profile'\r\n    // },\r\n    // {\r\n    //   href: 'chart',\r\n    //   icon: ErrorTwoTone,\r\n    //   title: 'Chart'\r\n    // },\r\n    // {\r\n    //   href: 'auth/404',\r\n    //   icon: ErrorTwoTone,\r\n    //   title: 'Error'\r\n    // },\r\n    // {\r\n    //   href: 'auth/login',\r\n    //   icon: LockOpenTwoTone,\r\n    //   title: 'Login'\r\n    // }\r\n \r\n ];\r\n\r\n export default Menuitems;","C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\layouts\\FullLayout\\Sidebar\\NavItems.js",[],"C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\layouts\\FullLayout\\Header\\Logo\\LogoText.js",[],"C:\\Users\\Jithin Balan\\Downloads\\covid19updates\\src\\layouts\\FullLayout\\Header\\Logo\\LogoIcon.js",[],{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","severity":1,"message":"229","line":2,"column":8,"nodeType":"230","messageId":"231","endLine":2,"endColumn":15},{"ruleId":"228","severity":1,"message":"232","line":14,"column":7,"nodeType":"230","messageId":"231","endLine":14,"endColumn":11},{"ruleId":"233","severity":1,"message":"234","line":32,"column":3,"nodeType":"235","messageId":"236","endLine":68,"endColumn":4},{"ruleId":"237","severity":1,"message":"238","line":36,"column":81,"nodeType":"239","messageId":"240","endLine":36,"endColumn":83},{"ruleId":"237","severity":1,"message":"238","line":37,"column":80,"nodeType":"239","messageId":"240","endLine":37,"endColumn":82},{"ruleId":"241","severity":1,"message":"242","line":38,"column":80,"nodeType":"243","messageId":"244","endLine":38,"endColumn":82},{"ruleId":"228","severity":1,"message":"245","line":4,"column":5,"nodeType":"230","messageId":"231","endLine":4,"endColumn":9},{"ruleId":"228","severity":1,"message":"246","line":5,"column":5,"nodeType":"230","messageId":"231","endLine":5,"endColumn":16},{"ruleId":"228","severity":1,"message":"247","line":6,"column":5,"nodeType":"230","messageId":"231","endLine":6,"endColumn":15},{"ruleId":"228","severity":1,"message":"248","line":8,"column":5,"nodeType":"230","messageId":"231","endLine":8,"endColumn":14},{"ruleId":"228","severity":1,"message":"249","line":9,"column":5,"nodeType":"230","messageId":"231","endLine":9,"endColumn":14},{"ruleId":"228","severity":1,"message":"250","line":11,"column":8,"nodeType":"230","messageId":"231","endLine":11,"endColumn":21},{"ruleId":"228","severity":1,"message":"251","line":12,"column":8,"nodeType":"230","messageId":"231","endLine":12,"endColumn":16},{"ruleId":"228","severity":1,"message":"252","line":14,"column":8,"nodeType":"230","messageId":"231","endLine":14,"endColumn":16},{"ruleId":"228","severity":1,"message":"229","line":20,"column":8,"nodeType":"230","messageId":"231","endLine":20,"endColumn":15},{"ruleId":"228","severity":1,"message":"253","line":24,"column":8,"nodeType":"230","messageId":"231","endLine":24,"endColumn":14},{"ruleId":"228","severity":1,"message":"254","line":36,"column":8,"nodeType":"230","messageId":"231","endLine":36,"endColumn":12},{"ruleId":"228","severity":1,"message":"255","line":37,"column":8,"nodeType":"230","messageId":"231","endLine":37,"endColumn":12},{"ruleId":"228","severity":1,"message":"256","line":40,"column":8,"nodeType":"230","messageId":"231","endLine":40,"endColumn":16},{"ruleId":"228","severity":1,"message":"257","line":41,"column":8,"nodeType":"230","messageId":"231","endLine":41,"endColumn":20},{"ruleId":"228","severity":1,"message":"258","line":63,"column":19,"nodeType":"230","messageId":"231","endLine":63,"endColumn":25},{"ruleId":"237","severity":1,"message":"238","line":67,"column":85,"nodeType":"239","messageId":"240","endLine":67,"endColumn":87},{"ruleId":"237","severity":1,"message":"238","line":68,"column":84,"nodeType":"239","messageId":"240","endLine":68,"endColumn":86},{"ruleId":"241","severity":1,"message":"242","line":69,"column":86,"nodeType":"243","messageId":"244","endLine":69,"endColumn":88},{"ruleId":"237","severity":1,"message":"259","line":93,"column":69,"nodeType":"239","messageId":"260","endLine":93,"endColumn":71},{"ruleId":"241","severity":1,"message":"242","line":94,"column":56,"nodeType":"243","messageId":"244","endLine":94,"endColumn":58},{"ruleId":"241","severity":1,"message":"242","line":106,"column":57,"nodeType":"243","messageId":"244","endLine":106,"endColumn":59},{"ruleId":"241","severity":1,"message":"242","line":163,"column":46,"nodeType":"243","messageId":"244","endLine":163,"endColumn":48},{"ruleId":"241","severity":1,"message":"261","line":194,"column":57,"nodeType":"243","messageId":"244","endLine":194,"endColumn":59},{"ruleId":"262","severity":1,"message":"263","line":278,"column":29,"nodeType":"264","endLine":278,"endColumn":69},{"ruleId":"262","severity":1,"message":"263","line":282,"column":29,"nodeType":"264","endLine":282,"endColumn":69},{"ruleId":"262","severity":1,"message":"263","line":287,"column":29,"nodeType":"264","endLine":287,"endColumn":69},{"ruleId":"262","severity":1,"message":"263","line":291,"column":29,"nodeType":"264","endLine":291,"endColumn":69},{"ruleId":"228","severity":1,"message":"245","line":4,"column":5,"nodeType":"230","messageId":"231","endLine":4,"endColumn":9},{"ruleId":"228","severity":1,"message":"246","line":5,"column":5,"nodeType":"230","messageId":"231","endLine":5,"endColumn":16},{"ruleId":"228","severity":1,"message":"247","line":6,"column":5,"nodeType":"230","messageId":"231","endLine":6,"endColumn":15},{"ruleId":"228","severity":1,"message":"250","line":8,"column":8,"nodeType":"230","messageId":"231","endLine":8,"endColumn":21},{"ruleId":"228","severity":1,"message":"251","line":9,"column":8,"nodeType":"230","messageId":"231","endLine":9,"endColumn":16},{"ruleId":"228","severity":1,"message":"265","line":10,"column":8,"nodeType":"230","messageId":"231","endLine":10,"endColumn":17},{"ruleId":"228","severity":1,"message":"252","line":11,"column":8,"nodeType":"230","messageId":"231","endLine":11,"endColumn":16},{"ruleId":"228","severity":1,"message":"266","line":12,"column":8,"nodeType":"230","messageId":"231","endLine":12,"endColumn":13},{"ruleId":"228","severity":1,"message":"267","line":14,"column":8,"nodeType":"230","messageId":"231","endLine":14,"endColumn":11},{"ruleId":"228","severity":1,"message":"268","line":15,"column":8,"nodeType":"230","messageId":"231","endLine":15,"endColumn":11},{"ruleId":"228","severity":1,"message":"269","line":16,"column":8,"nodeType":"230","messageId":"231","endLine":16,"endColumn":11},{"ruleId":"228","severity":1,"message":"270","line":17,"column":8,"nodeType":"230","messageId":"231","endLine":17,"endColumn":11},{"ruleId":"228","severity":1,"message":"271","line":18,"column":10,"nodeType":"230","messageId":"231","endLine":18,"endColumn":18},{"ruleId":"228","severity":1,"message":"272","line":18,"column":19,"nodeType":"230","messageId":"231","endLine":18,"endColumn":26},{"ruleId":"228","severity":1,"message":"273","line":18,"column":27,"nodeType":"230","messageId":"231","endLine":18,"endColumn":37},{"ruleId":"228","severity":1,"message":"274","line":21,"column":10,"nodeType":"230","messageId":"231","endLine":21,"endColumn":30},{"ruleId":"228","severity":1,"message":"275","line":22,"column":8,"nodeType":"230","messageId":"231","endLine":22,"endColumn":16},{"ruleId":"228","severity":1,"message":"276","line":23,"column":8,"nodeType":"230","messageId":"231","endLine":23,"endColumn":18},{"ruleId":"228","severity":1,"message":"229","line":26,"column":8,"nodeType":"230","messageId":"231","endLine":26,"endColumn":15},{"ruleId":"228","severity":1,"message":"277","line":27,"column":8,"nodeType":"230","messageId":"231","endLine":27,"endColumn":25},{"ruleId":"228","severity":1,"message":"253","line":30,"column":8,"nodeType":"230","messageId":"231","endLine":30,"endColumn":14},{"ruleId":"228","severity":1,"message":"278","line":32,"column":8,"nodeType":"230","messageId":"231","endLine":32,"endColumn":12},{"ruleId":"241","severity":1,"message":"242","line":78,"column":50,"nodeType":"243","messageId":"244","endLine":78,"endColumn":52},{"ruleId":"228","severity":1,"message":"250","line":8,"column":8,"nodeType":"230","messageId":"231","endLine":8,"endColumn":21},{"ruleId":"228","severity":1,"message":"251","line":9,"column":8,"nodeType":"230","messageId":"231","endLine":9,"endColumn":16},{"ruleId":"228","severity":1,"message":"252","line":11,"column":8,"nodeType":"230","messageId":"231","endLine":11,"endColumn":16},{"ruleId":"228","severity":1,"message":"279","line":13,"column":8,"nodeType":"230","messageId":"231","endLine":13,"endColumn":16},{"ruleId":"228","severity":1,"message":"267","line":14,"column":8,"nodeType":"230","messageId":"231","endLine":14,"endColumn":11},{"ruleId":"228","severity":1,"message":"268","line":15,"column":8,"nodeType":"230","messageId":"231","endLine":15,"endColumn":11},{"ruleId":"228","severity":1,"message":"269","line":16,"column":8,"nodeType":"230","messageId":"231","endLine":16,"endColumn":11},{"ruleId":"228","severity":1,"message":"270","line":17,"column":8,"nodeType":"230","messageId":"231","endLine":17,"endColumn":11},{"ruleId":"228","severity":1,"message":"276","line":22,"column":8,"nodeType":"230","messageId":"231","endLine":22,"endColumn":18},{"ruleId":"228","severity":1,"message":"253","line":30,"column":8,"nodeType":"230","messageId":"231","endLine":30,"endColumn":14},{"ruleId":"228","severity":1,"message":"280","line":70,"column":19,"nodeType":"230","messageId":"231","endLine":70,"endColumn":33},{"ruleId":"237","severity":1,"message":"238","line":84,"column":85,"nodeType":"239","messageId":"240","endLine":84,"endColumn":87},{"ruleId":"237","severity":1,"message":"238","line":85,"column":84,"nodeType":"239","messageId":"240","endLine":85,"endColumn":86},{"ruleId":"241","severity":1,"message":"242","line":86,"column":86,"nodeType":"243","messageId":"244","endLine":86,"endColumn":88},{"ruleId":"237","severity":1,"message":"238","line":93,"column":78,"nodeType":"239","messageId":"240","endLine":93,"endColumn":80},{"ruleId":"228","severity":1,"message":"281","line":105,"column":13,"nodeType":"230","messageId":"231","endLine":105,"endColumn":21},{"ruleId":"241","severity":1,"message":"261","line":25,"column":23,"nodeType":"243","messageId":"244","endLine":25,"endColumn":25},{"ruleId":"228","severity":1,"message":"282","line":8,"column":5,"nodeType":"230","messageId":"231","endLine":8,"endColumn":11},{"ruleId":"228","severity":1,"message":"283","line":9,"column":5,"nodeType":"230","messageId":"231","endLine":9,"endColumn":8},{"ruleId":"228","severity":1,"message":"253","line":11,"column":8,"nodeType":"230","messageId":"231","endLine":11,"endColumn":14},{"ruleId":"228","severity":1,"message":"284","line":26,"column":9,"nodeType":"230","messageId":"231","endLine":26,"endColumn":14},{"ruleId":"228","severity":1,"message":"285","line":3,"column":18,"nodeType":"230","messageId":"231","endLine":3,"endColumn":23},{"ruleId":"228","severity":1,"message":"286","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":16},{"ruleId":"228","severity":1,"message":"287","line":6,"column":8,"nodeType":"230","messageId":"231","endLine":6,"endColumn":21},{"ruleId":"228","severity":1,"message":"288","line":7,"column":8,"nodeType":"230","messageId":"231","endLine":7,"endColumn":29},{"ruleId":"228","severity":1,"message":"289","line":3,"column":15,"nodeType":"230","messageId":"231","endLine":3,"endColumn":22},{"ruleId":"228","severity":1,"message":"290","line":6,"column":8,"nodeType":"230","messageId":"231","endLine":6,"endColumn":15},{"ruleId":"228","severity":1,"message":"291","line":1,"column":54,"nodeType":"230","messageId":"231","endLine":1,"endColumn":69},{"ruleId":"228","severity":1,"message":"292","line":1,"column":71,"nodeType":"230","messageId":"231","endLine":1,"endColumn":83},{"ruleId":"228","severity":1,"message":"293","line":1,"column":85,"nodeType":"230","messageId":"231","endLine":1,"endColumn":105},{"ruleId":"228","severity":1,"message":"294","line":1,"column":107,"nodeType":"230","messageId":"231","endLine":1,"endColumn":120},"no-native-reassign",["295"],"no-negated-in-lhs",["296"],"no-unused-vars","'MapData' is defined but never used.","Identifier","unusedVar","'self' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Card' is defined but never used.","'CardContent' is defined but never used.","'CardHeader' is defined but never used.","'Container' is defined but never used.","'CardMedia' is defined but never used.","'SalesOverview' is defined but never used.","'Visitors' is defined but never used.","'Contacts' is defined but never used.","'moment' is defined but never used.","'Who5' is defined but never used.","'Who6' is defined but never used.","'GridList' is defined but never used.","'GridListTile' is defined but never used.","'filter' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'InfoCards' is defined but never used.","'Table' is defined but never used.","'us1' is defined but never used.","'us2' is defined but never used.","'us3' is defined but never used.","'us4' is defined but never used.","'HowToReg' is defined but never used.","'MoodBad' is defined but never used.","'TrendingUp' is defined but never used.","'ResponsiveChoropleth' is defined but never used.","'Skeleton' is defined but never used.","'Typography' is defined but never used.","'CountriesNameCode' is defined but never used.","'Grow' is defined but never used.","'BlogCard' is defined but never used.","'preventDefault' is assigned a value but never used.","'Articles' is assigned a value but never used.","'Avatar' is defined but never used.","'Box' is defined but never used.","'faces' is assigned a value but never used.","'Badge' is defined but never used.","'MailIcon' is defined but never used.","'ExitToAppIcon' is defined but never used.","'NotificationsNoneIcon' is defined but never used.","'Divider' is defined but never used.","'Profile' is defined but never used.","'LockOpenTwoTone' is defined but never used.","'ErrorTwoTone' is defined but never used.","'AccountCircleTwoTone' is defined but never used.","'BallotTwoTone' is defined but never used.","no-global-assign","no-unsafe-negation"]